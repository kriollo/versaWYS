import{computed as e,ref as r}from"vue";import{useFileZise as i,useValidFile as s}from"../composables/useValidFile.js";export const filesError={props:{FilesErrors:{type:Array,required:!0}},setup:r=>({FilesErrors:e((()=>r.FilesErrors))}),template:'\n        <div class="">\n            <div class="p-0 m-0 overflow-auto">\n                <ul class="" >\n                    <li class="" v-for="item in FilesErrors">\n                        <i class="bi bi-exclamation-circle text-red-500"></i>\n                        {{ item.name }} - {{ item.error_msg }}\n                    </li>\n                </ul>\n            </div>\n        </div>\n    '};export const fileErrorModal={emits:["accion"],props:{FilesErrors:{type:Array,required:!0},ShowModalFilesError:{type:Boolean,required:!0}},setup:r=>({FilesErrors:e((()=>r.FilesErrors)),ShowModalFilesError:e((()=>r.ShowModalFilesError))}),methods:{accion(e){this.$emit("accion",e)}},template:'\n        <modal idModal="filesErrorModal" :showModal="ShowModalFilesError" @accion="accion" key="filesErrorModal">\n            <template v-slot:modalTitle>Archivos con Errores</template>\n            <template v-slot:modalBody>\n                <filesError :FilesErrors="FilesErrors" key="fileErrorDropZone" />\n            </template>\n            <template v-slot:modalFooter>\n                <button @click="accion({accion: \'closeModalFilesError\'})" type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">\n                    Cancelar\n                </button>\n            </template>\n        </modal>\n    '};export const dropZone={emits:["accion"],props:{FileTypeValid:{type:Array,required:!0},multiple:{type:Boolean,required:!1,default:!1},nfilesMultiple:{type:Number,required:!1,default:1},files:{type:Array,required:!1}},setup(i){const s=r("Arrastra y Suelta Archivos"),l=r(i.multiple),o=r(!1),t=e((()=>void 0!==i.files?i.files:[]));return{mensaje:s,classActive:o,showModalFilesError:r(!1),ArrayFilesErrors:r([]),files:t,multiple:l}},methods:{btn_SelectFile:function(){this.$refs.fileInput.click()},DesdeInputChange:function(e){e.preventDefault(),this.setFilesLocal(e.target.files)},drag:function(e){e.preventDefault(),this.classActive=!0,this.mensaje="Suelta para Subir"},drop:function(e){e.preventDefault(),this.classActive=!1,this.mensaje="Arrastra y Suelta Archivos",this.setFilesLocal(e.dataTransfer.files)},dragleave:function(e){e.preventDefault(),this.classActive=!1,this.mensaje="Arrastra y Suelta Archivos"},validaFiles:function(e){if(!s(this.FileTypeValid,e))return{name:e.name,error_msg:"Archivo no permitido"};if(!i(e,10))return{name:e.name,error_msg:"Archivo no debe ser mayor a 10MB"};return!(this.files.findIndex((r=>r.name===e.name))>=0)||{name:e.name,error_msg:"Archivo ya existe en la lista"}},setFilesLocal(e){const r=this,i=[];if(this.ArrayFilesErrors=[],!(e.length<=0)){if(!0===this.multiple&&e.length>this.nfilesMultiple)return this.ArrayFilesErrors.push({name:"Multiples Archivos",error_msg:`Solo se permiten ${this.nfilesMultiple} archivo a la vez`}),void(this.showModalFilesError=!0);for(let s of e){const e=r.validaFiles(s);!0===e?i.push({archivo:s.name,type:s.type,size:s.size,file:s}):this.ArrayFilesErrors.push(e)}i.length>0&&this.accion({accion:"addFiles",files:this.multiple?i:i[0]}),this.ArrayFilesErrors.length>0&&(this.showModalFilesError=!0)}},accion(e){const r={addFiles:()=>this.$emit("accion",e),closeModalFilesError:()=>{this.showModalFilesError=!1},closeModal:()=>{this.showModalFilesError=!1}},i=r[e.accion]||r.default;"function"==typeof i&&i()}},template:'\n        <div class="w-full h-full dark:text-white">\n            <a @click="btn_SelectFile" class="DragDropArea" ref="DragDropArea"  :class="classActive?\'active\':\'\'" @dragover="drag" @drop="drop" @dragleave="dragleave" style="cursor:pointer;" title="Puedes dar click o arrastrar los archivos">\n                <div class="text-center">\n                    <h4 class="text-center">{{ mensaje }}</h4>\n                </div>\n                <p class="font-bold text-xs text-center">Tipos Validos: .png .jpg .svg</p>\n                <p class="font-bold text-xs text-center">Tama√±o Maximo: 10MB</p>\n\n                <input type="file" id="file" ref="fileInput" name="file" class="form-control" @change="DesdeInputChange" hidden :multiple="multiple"/>\n            </a>\n            <fileErrorModal :ShowModalFilesError="showModalFilesError" :FilesErrors="ArrayFilesErrors" @accion="accion" key="fileErrorModal" />\n        </div>\n    '};