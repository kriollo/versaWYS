{% extends 'dashboard/layout/layout.twig' %}
{% block appHead %}
	<style>
		.content {
			padding: 20px;
		}
	</style>
{% endblock %}
{% block appBody %}
	<div class="flex flex-col lg:flex-grow p-2 pb-24 bg-gray-50 dark:bg-gray-900 w-full">

		<div class="dark:text-white">
			<h1 class="flex gap-2">
				<img class="w-6 h-6" src="/public/dashboard/img/favicon.webp" alt="VersaWYS Framework">

				<a href="/" class="text-blue-500">VersaWYS Framework</a>
				<span class="bg-green-100 text-green-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-300">{{ config['build']['version']}}</span>
				<span class="text-gray-300">/ Doc</span>
				<span class="bg-yellow-100 text-yellow-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-yellow-900 dark:text-yellow-300">v1.0</span>

			</h1>
		</div>

		{% set lastRoute = '' %}
		<div class="flex gap-2 dark:text-white p-2">
			{% for opcion in opcionActual %}
				{% if not loop.last %}
					<a href="{{ opcion.link }}" class="text-blue-500">{{ opcion.name }}</a>
					<span class="text-blue-500">/</span>
				{% else %}
					<span class="dark:text-white text-gray-300">{{ opcion.name }}</span>
				{% endif %}
				{% set lastRoute = opcion.name %}
			{% endfor %}
		</div>
		{% if routesFiles|length > 0 %}
			<ul class="dark:text-white">
				{% for file in routesFiles %}
					<li class="bg-gray-800 text-gray-300 p-2 mb-2 rounded hover:bg-gray-700 cursor-pointer">
						<a href="?route={{file}}">{{ file }}</a>
					</li>
				{% endfor %}
			</ul>
		{% endif %}
		{% if routesFromRouteFile|length > 0 %}
			<div class="rounded-md border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800">
				<div class="border-b border-gray-200 dark:border-gray-700 p-4 flex justify-between items-center">
					<h2 class="text-lg font-medium text-gray-900 dark:text-white">
						{{lastRoute}}
					</h2>
					<div class="flex items-center gap-4">
						<input type="text" id="searchInput" class="w-64 p-2 border border-gray-200 dark:border-gray-700 rounded" placeholder="Buscar ruta">
						<button class="bg-blue-500 text-white p-2 rounded" onclick="filterRoutes()">Buscar</button>
					</div>
				</div>
				<div id="routesList" class="divide-y divide-gray-200 dark:divide-gray-700">
					{% for route in routesFromRouteFile %}
						<div class="route-item mb-4 p-4 bg-gray-50 dark:bg-gray-800 cursor-pointer" onclick="toggleMiddleware(this)">
							<div class="flex items-center gap-4">
								<span class="rounded px-4 py-1 text-sm font-bold text-white w-20 text-center {{route.method == 'GET' ? 'bg-green-500' :route.method == 'POST' ? 'bg-blue-500' :route.method == 'PUT' ? 'bg-yellow-500' :route.method == 'DELETE' ? 'bg-red-500' :'bg-gray-500'}}">
									{{route.method|upper }}
								</span>
								<span class="w-64 text-sm text-gray-900 dark:text-gray-200">{{route.route}}</span>
								<span class="text-lg text-gray-900 dark:text-gray-400 w-full block mb-2">
									{{ route.description|capitalize }}
								</span>
							</div>
							<div class="acordeon hidden mt-4 p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 flex-col">
								<div class="mb-2">
									<span class="font-bold text-gray-900 dark:text-gray-400">Clase:</span>
									<span class="text-gray-900 dark:text-gray-400">{{route.class}}</span>
								</div>
								<div class="mb-2">
									<span class="font-bold text-gray-900 dark:text-gray-400">Método:</span>
									<span class="text-gray-900 dark:text-gray-400">{{route.class_method|trim}}</span>
								</div>
								{% if route.requestBody|length > 0 %}
									<div class="mt-4">
										<span class="font-bold text-sm text-gray-900 dark:text-gray-200">Request Body:</span>
										{% for requestBody in route.requestBody %}
											<div class="text-sm text-gray-600 dark:text-gray-400">
												<span>
													<strong>{{requestBody.name}}</strong>
													({{requestBody.type}}):
													{{requestBody.description}}
												</span>
											</div>
										{% endfor %}
									</div>
								{% endif %}
								{% if route.queryParams|length > 0 %}
									<div class="mt-4">
										<span class="font-bold text-sm text-gray-900 dark:text-gray-200">Query Params:</span>
										{% for param in route.queryParams %}
											<div class="text-sm text-gray-600 dark:text-gray-400">
												<span>
													<strong>{{param.name}}</strong>
													({{param.type}}):
													{{param.description}}
												</span>
											</div>
										{% endfor %}
									</div>
								{% endif %}
								{% if route.middleware|length > 0 %}
									<div class="mt-4">
										<span class="font-bold text-sm text-gray-900 dark:text-gray-200">Middlewares:</span>
										{% for middleware in route.middleware %}
											<div class="text-sm text-gray-600 dark:text-gray-400">
												<span>
													<strong>{{middleware.class}}</strong>
												</span>
												<span>Método:
													{{middleware.class_method}}
												</span>
											</div>
										{% endfor %}
									</div>
								{% endif %}
							</div>
						</div>
					{% endfor %}
				</div>
			</div>
		{% endif %}

		<textarea type="text" id="routes" class="hidden">{{ routesFromRouteFile | json_encode | raw }}</textarea>

	</div>
{% endblock %}
{% block appScript %}
<script>
	const routesFromRouteFile = JSON.parse(document.querySelector('#routes').value);
	function toggleMiddleware(element) {
		const middleware = element.querySelector('.acordeon');
		middleware.classList.toggle('hidden');
	}

	function filterRoutes() {
		const searchInput = document.getElementById('searchInput').value.toLowerCase();
		const filteredRoutes = routesFromRouteFile.filter(route =>
			route.route.toLowerCase().includes(searchInput) ||
			route.description.toLowerCase().includes(searchInput)
		);

		const routesList = document.getElementById('routesList');
		routesList.innerHTML = '';

		filteredRoutes.forEach(route => {
			const routeItem = document.createElement('div');
			routeItem.className = 'route-item mb-4 p-4 bg-gray-50 dark:bg-gray-800 cursor-pointer';
			routeItem.onclick = () => toggleMiddleware(routeItem);
			routeItem.innerHTML = `
				<div class="flex items-center gap-4">
					<span class="rounded px-4 py-1 text-sm font-bold text-white w-20 text-center ${route.method == 'GET' ? 'bg-green-500' : route.method == 'POST' ? 'bg-blue-500' : route.method == 'PUT' ? 'bg-yellow-500' : route.method == 'DELETE' ? 'bg-red-500' : 'bg-gray-500'}">
						${route.method.toUpperCase()}
					</span>
					<span class="w-64 text-sm text-gray-900 dark:text-gray-200">${route.route}</span>
					<span class="text-lg text-gray-900 dark:text-gray-400 w-full block mb-2">
						${route.description.charAt(0).toUpperCase() + route.description.slice(1)}
					</span>
				</div>
				<div class="acordeon hidden mt-4 p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 flex-col">
					<div class="mb-2">
						<span class="font-bold text-gray-900 dark:text-gray-400">Clase:</span>
						<span class="text-gray-900 dark:text-gray-400">${route.class}</span>
					</div>
					<div class="mb-2">
						<span class="font-bold text-gray-900 dark:text-gray-400">Método:</span>
						<span class="text-gray-900 dark:text-gray-400">${route.class_method.trim()}</span>
					</div>
					${route.requestBody.length > 0 ? `
						<div class="mt-4">
							<span class="font-bold text-sm text-gray-900 dark:text-gray-200">Request Body:</span>
							${route.requestBody.map(requestBody => `
								<div class="text-sm text-gray-600 dark:text-gray-400">
									<span>
										<strong>${requestBody.name}</strong>
										(${requestBody.type}):
										${requestBody.description}
									</span>
								</div>
							`).join('')}
						</div>
					` : ''}
					${route.queryParams.length > 0 ? `
						<div class="mt-4">
							<span class="font-bold text-sm text-gray-900 dark:text-gray-200">Query Params:</span>
							${route.queryParams.map(param => `
								<div class="text-sm text-gray-600 dark:text-gray-400">
									<span>
										<strong>${param.name}</strong>
										(${param.type}):
										${param.description}
									</span>
								</div>
							`).join('')}
						</div>
					` : ''}
					${route.middleware.length > 0 ? `
						<div class="mt-4">
							<span class="font-bold text-sm text-gray-900 dark:text-gray-200">Middlewares:</span>
							${route.middleware.map(middleware => `
								<div class="text-sm text-gray-600 dark:text-gray-400">
									<span>
										<strong>${middleware.class}</strong>
									</span>
									<span>Método:
										${middleware.class_method}
									</span>
								</div>
							`).join('')}
						</div>
					` : ''}
				</div>
			`;
			routesList.appendChild(routeItem);
		});
	}
</script>
{% endblock %}
